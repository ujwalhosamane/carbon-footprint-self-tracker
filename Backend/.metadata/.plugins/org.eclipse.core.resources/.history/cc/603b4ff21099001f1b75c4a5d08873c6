package com.carbon.footprint.repository;

import java.util.Date;
import java.util.List;
import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import com.carbon.footprint.dto.CarbonFootprintDTO;
import com.carbon.footprint.model.CarbonFootprint;

public interface CarbonFootprintRepository extends JpaRepository<CarbonFootprint, Integer> {
	
	
	List<CarbonFootprint> findFootprintsByUserId(String userId);
	
	
	
	// Check if a record exists for the given userId, footprintMonth, and footprintYear
	@Query("SELECT cf FROM CarbonFootprint cf "
			+ "WHERE cf.userId = :userId AND "
			+ "cf.footprintMonth = :month AND "
			+ "cf.footprintYear = :year")
    Optional<CarbonFootprint> findByUserIdAndMonthAndYear(
    		@Param("userId") String userId, 
    		@Param("month") String month, 
    		@Param("year") int year);
	
	
	
	@Query("SELECT new CarbonFootprintDTO(" +
	           "SUM(cf.transportation), SUM(cf.electricity), SUM(cf.lpg), " +
	           "SUM(cf.shipping), SUM(cf.airConditioner), SUM(cf.totalFootprint)) " +
	           "FROM CarbonFootprint cf " +
	           "WHERE cf.footprintMonth = :month AND cf.footprintYear = :year")
	Optional<CarbonFootprintDTO> findMonthlySums(
	        @Param("month") String month, 
	        @Param("year") int year);
	
	
	
	@Query("SELECT new com.carbon.footprint.dto.CarbonFootprintDTO(" +
	           "SUM(cf.transportation), SUM(cf.electricity), SUM(cf.lpg), " +
	           "SUM(cf.shipping), SUM(cf.airConditioner), SUM(cf.totalFootprint)) " +
	           "FROM CarbonFootprint cf " +
	           "WHERE cf.creationDate BETWEEN :startDate AND :endDate")
	    CarbonFootprintDTO findLastSixMonthsSums(@Param("startDate") Dates startDate, 
	                                             @Param("endDate") Date endDate);
}
